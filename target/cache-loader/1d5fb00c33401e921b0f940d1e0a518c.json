{"remainingRequest":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\tslint-loader\\index.js!C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\src\\main\\webapp\\app\\entities\\cart\\cart.service.ts","dependencies":[{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\src\\main\\webapp\\app\\entities\\cart\\cart.service.ts","mtime":1570541377799},{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7DQp2YXIgX2E7DQppbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7DQppbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOw0KaW1wb3J0ICogYXMgbW9tZW50IGZyb20gJ21vbWVudCc7DQppbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7DQppbXBvcnQgeyBTRVJWRVJfQVBJX1VSTCB9IGZyb20gJ2FwcC9hcHAuY29uc3RhbnRzJzsNCmltcG9ydCB7IGNyZWF0ZVJlcXVlc3RPcHRpb24gfSBmcm9tICdhcHAvc2hhcmVkJzsNCmxldCBDYXJ0U2VydmljZSA9IGNsYXNzIENhcnRTZXJ2aWNlIHsNCiAgICBjb25zdHJ1Y3RvcihodHRwKSB7DQogICAgICAgIHRoaXMuaHR0cCA9IGh0dHA7DQogICAgICAgIHRoaXMucmVzb3VyY2VVcmwgPSBTRVJWRVJfQVBJX1VSTCArICdhcGkvY2FydHMnOw0KICAgIH0NCiAgICBjcmVhdGUoY2FydCkgew0KICAgICAgICBjb25zdCBjb3B5ID0gdGhpcy5jb252ZXJ0RGF0ZUZyb21DbGllbnQoY2FydCk7DQogICAgICAgIHJldHVybiB0aGlzLmh0dHANCiAgICAgICAgICAgIC5wb3N0KHRoaXMucmVzb3VyY2VVcmwsIGNvcHksIHsgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KQ0KICAgICAgICAgICAgLnBpcGUobWFwKChyZXMpID0+IHRoaXMuY29udmVydERhdGVGcm9tU2VydmVyKHJlcykpKTsNCiAgICB9DQogICAgdXBkYXRlKGNhcnQpIHsNCiAgICAgICAgY29uc3QgY29weSA9IHRoaXMuY29udmVydERhdGVGcm9tQ2xpZW50KGNhcnQpOw0KICAgICAgICByZXR1cm4gdGhpcy5odHRwDQogICAgICAgICAgICAucHV0KHRoaXMucmVzb3VyY2VVcmwsIGNvcHksIHsgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KQ0KICAgICAgICAgICAgLnBpcGUobWFwKChyZXMpID0+IHRoaXMuY29udmVydERhdGVGcm9tU2VydmVyKHJlcykpKTsNCiAgICB9DQogICAgZmluZChpZCkgew0KICAgICAgICByZXR1cm4gdGhpcy5odHRwDQogICAgICAgICAgICAuZ2V0KGAke3RoaXMucmVzb3VyY2VVcmx9LyR7aWR9YCwgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pDQogICAgICAgICAgICAucGlwZShtYXAoKHJlcykgPT4gdGhpcy5jb252ZXJ0RGF0ZUZyb21TZXJ2ZXIocmVzKSkpOw0KICAgIH0NCiAgICBxdWVyeShyZXEpIHsNCiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IGNyZWF0ZVJlcXVlc3RPcHRpb24ocmVxKTsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cA0KICAgICAgICAgICAgLmdldCh0aGlzLnJlc291cmNlVXJsLCB7IHBhcmFtczogb3B0aW9ucywgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KQ0KICAgICAgICAgICAgLnBpcGUobWFwKChyZXMpID0+IHRoaXMuY29udmVydERhdGVBcnJheUZyb21TZXJ2ZXIocmVzKSkpOw0KICAgIH0NCiAgICBkZWxldGUoaWQpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5kZWxldGUoYCR7dGhpcy5yZXNvdXJjZVVybH0vJHtpZH1gLCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSk7DQogICAgfQ0KICAgIGNvbnZlcnREYXRlRnJvbUNsaWVudChjYXJ0KSB7DQogICAgICAgIGNvbnN0IGNvcHkgPSBPYmplY3QuYXNzaWduKHt9LCBjYXJ0LCB7DQogICAgICAgICAgICB0aW1lOiBjYXJ0LnRpbWUgIT0gbnVsbCAmJiBjYXJ0LnRpbWUuaXNWYWxpZCgpID8gY2FydC50aW1lLnRvSlNPTigpIDogbnVsbA0KICAgICAgICB9KTsNCiAgICAgICAgcmV0dXJuIGNvcHk7DQogICAgfQ0KICAgIGNvbnZlcnREYXRlRnJvbVNlcnZlcihyZXMpIHsNCiAgICAgICAgaWYgKHJlcy5ib2R5KSB7DQogICAgICAgICAgICByZXMuYm9keS50aW1lID0gcmVzLmJvZHkudGltZSAhPSBudWxsID8gbW9tZW50KHJlcy5ib2R5LnRpbWUpIDogbnVsbDsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gcmVzOw0KICAgIH0NCiAgICBjb252ZXJ0RGF0ZUFycmF5RnJvbVNlcnZlcihyZXMpIHsNCiAgICAgICAgaWYgKHJlcy5ib2R5KSB7DQogICAgICAgICAgICByZXMuYm9keS5mb3JFYWNoKChjYXJ0KSA9PiB7DQogICAgICAgICAgICAgICAgY2FydC50aW1lID0gY2FydC50aW1lICE9IG51bGwgPyBtb21lbnQoY2FydC50aW1lKSA6IG51bGw7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gcmVzOw0KICAgIH0NCn07DQpDYXJ0U2VydmljZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbDQogICAgSW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KSwNCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgSHR0cENsaWVudCAhPT0gInVuZGVmaW5lZCIgJiYgSHR0cENsaWVudCkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdF0pDQpdLCBDYXJ0U2VydmljZSk7DQpleHBvcnQgeyBDYXJ0U2VydmljZSB9Ow0K"},{"version":3,"file":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\src\\main\\webapp\\app\\entities\\cart\\cart.service.ts","sourceRoot":"","sources":["C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\tslint-loader\\index.js!C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\src\\main\\webapp\\app\\entities\\cart\\cart.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as moment from 'moment';\nimport { DATE_FORMAT } from 'app/shared/constants/input.constants';\nimport { map } from 'rxjs/operators';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared';\nimport { ICart } from 'app/shared/model/cart.model';\n\ntype EntityResponseType = HttpResponse<ICart>;\ntype EntityArrayResponseType = HttpResponse<ICart[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class CartService {\n  public resourceUrl = SERVER_API_URL + 'api/carts';\n\n  constructor(protected http: HttpClient) {}\n\n  create(cart: ICart): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(cart);\n    return this.http\n      .post<ICart>(this.resourceUrl, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  update(cart: ICart): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(cart);\n    return this.http\n      .put<ICart>(this.resourceUrl, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http\n      .get<ICart>(`${this.resourceUrl}/${id}`, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http\n      .get<ICart[]>(this.resourceUrl, { params: options, observe: 'response' })\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n  }\n\n  delete(id: number): Observable<HttpResponse<any>> {\n    return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  protected convertDateFromClient(cart: ICart): ICart {\n    const copy: ICart = Object.assign({}, cart, {\n      time: cart.time != null && cart.time.isValid() ? cart.time.toJSON() : null\n    });\n    return copy;\n  }\n\n  protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n    if (res.body) {\n      res.body.time = res.body.time != null ? moment(res.body.time) : null;\n    }\n    return res;\n  }\n\n  protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n    if (res.body) {\n      res.body.forEach((cart: ICart) => {\n        cart.time = cart.time != null ? moment(cart.time) : null;\n      });\n    }\n    return res;\n  }\n}\n"]}]}