{"remainingRequest":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\tslint-loader\\index.js!C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\src\\main\\webapp\\app\\admin\\health\\health.service.ts","dependencies":[{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\src\\main\\webapp\\app\\admin\\health\\health.service.ts","mtime":1570436038627},{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7DQp2YXIgX2E7DQppbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7DQppbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOw0KaW1wb3J0IHsgU0VSVkVSX0FQSV9VUkwgfSBmcm9tICdhcHAvYXBwLmNvbnN0YW50cyc7DQpsZXQgSmhpSGVhbHRoU2VydmljZSA9IGNsYXNzIEpoaUhlYWx0aFNlcnZpY2Ugew0KICAgIGNvbnN0cnVjdG9yKGh0dHApIHsNCiAgICAgICAgdGhpcy5odHRwID0gaHR0cDsNCiAgICAgICAgdGhpcy5zZXBhcmF0b3IgPSAnLic7DQogICAgfQ0KICAgIGNoZWNrSGVhbHRoKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5odHRwLmdldChTRVJWRVJfQVBJX1VSTCArICdtYW5hZ2VtZW50L2hlYWx0aCcpOw0KICAgIH0NCiAgICB0cmFuc2Zvcm1IZWFsdGhEYXRhKGRhdGEpIHsNCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBbXTsNCiAgICAgICAgdGhpcy5mbGF0dGVuSGVhbHRoRGF0YShyZXNwb25zZSwgbnVsbCwgZGF0YS5kZXRhaWxzKTsNCiAgICAgICAgcmV0dXJuIHJlc3BvbnNlOw0KICAgIH0NCiAgICBnZXRCYXNlTmFtZShuYW1lKSB7DQogICAgICAgIGlmIChuYW1lKSB7DQogICAgICAgICAgICBjb25zdCBzcGxpdCA9IG5hbWUuc3BsaXQoJy4nKTsNCiAgICAgICAgICAgIHJldHVybiBzcGxpdFswXTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICBnZXRTdWJTeXN0ZW1OYW1lKG5hbWUpIHsNCiAgICAgICAgaWYgKG5hbWUpIHsNCiAgICAgICAgICAgIGNvbnN0IHNwbGl0ID0gbmFtZS5zcGxpdCgnLicpOw0KICAgICAgICAgICAgc3BsaXQuc3BsaWNlKDAsIDEpOw0KICAgICAgICAgICAgY29uc3QgcmVtYWluZGVyID0gc3BsaXQuam9pbignLicpOw0KICAgICAgICAgICAgcmV0dXJuIHJlbWFpbmRlciA/ICcgLSAnICsgcmVtYWluZGVyIDogJyc7DQogICAgICAgIH0NCiAgICB9DQogICAgLyogcHJpdmF0ZSBtZXRob2RzICovDQogICAgYWRkSGVhbHRoT2JqZWN0KHJlc3VsdCwgaXNMZWFmLCBoZWFsdGhPYmplY3QsIG5hbWUpIHsNCiAgICAgICAgY29uc3QgaGVhbHRoRGF0YSA9IHsNCiAgICAgICAgICAgIG5hbWUNCiAgICAgICAgfTsNCiAgICAgICAgY29uc3QgZGV0YWlscyA9IHt9Ow0KICAgICAgICBsZXQgaGFzRGV0YWlscyA9IGZhbHNlOw0KICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBoZWFsdGhPYmplY3QpIHsNCiAgICAgICAgICAgIGlmIChoZWFsdGhPYmplY3QuaGFzT3duUHJvcGVydHkoa2V5KSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gaGVhbHRoT2JqZWN0W2tleV07DQogICAgICAgICAgICAgICAgaWYgKGtleSA9PT0gJ3N0YXR1cycgfHwga2V5ID09PSAnZXJyb3InKSB7DQogICAgICAgICAgICAgICAgICAgIGhlYWx0aERhdGFba2V5XSA9IHZhbHVlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzSGVhbHRoT2JqZWN0KHZhbHVlKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgZGV0YWlsc1trZXldID0gdmFsdWU7DQogICAgICAgICAgICAgICAgICAgICAgICBoYXNEZXRhaWxzID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAvLyBBZGQgdGhlIGRldGFpbHMNCiAgICAgICAgaWYgKGhhc0RldGFpbHMpIHsNCiAgICAgICAgICAgIGhlYWx0aERhdGEuZGV0YWlscyA9IGRldGFpbHM7DQogICAgICAgIH0NCiAgICAgICAgLy8gT25seSBhZGQgbm9kZXMgaWYgdGhleSBwcm92aWRlIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24NCiAgICAgICAgaWYgKGlzTGVhZiB8fCBoYXNEZXRhaWxzIHx8IGhlYWx0aERhdGEuZXJyb3IpIHsNCiAgICAgICAgICAgIHJlc3VsdC5wdXNoKGhlYWx0aERhdGEpOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiBoZWFsdGhEYXRhOw0KICAgIH0NCiAgICBmbGF0dGVuSGVhbHRoRGF0YShyZXN1bHQsIHBhdGgsIGRhdGEpIHsNCiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gZGF0YSkgew0KICAgICAgICAgICAgaWYgKGRhdGEuaGFzT3duUHJvcGVydHkoa2V5KSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZGF0YVtrZXldOw0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzSGVhbHRoT2JqZWN0KHZhbHVlKSkgew0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5oYXNTdWJTeXN0ZW0odmFsdWUpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEhlYWx0aE9iamVjdChyZXN1bHQsIGZhbHNlLCB2YWx1ZSwgdGhpcy5nZXRNb2R1bGVOYW1lKHBhdGgsIGtleSkpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5mbGF0dGVuSGVhbHRoRGF0YShyZXN1bHQsIHRoaXMuZ2V0TW9kdWxlTmFtZShwYXRoLCBrZXkpLCB2YWx1ZSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEhlYWx0aE9iamVjdChyZXN1bHQsIHRydWUsIHZhbHVlLCB0aGlzLmdldE1vZHVsZU5hbWUocGF0aCwga2V5KSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIHJlc3VsdDsNCiAgICB9DQogICAgZ2V0TW9kdWxlTmFtZShwYXRoLCBuYW1lKSB7DQogICAgICAgIGxldCByZXN1bHQ7DQogICAgICAgIGlmIChwYXRoICYmIG5hbWUpIHsNCiAgICAgICAgICAgIHJlc3VsdCA9IHBhdGggKyB0aGlzLnNlcGFyYXRvciArIG5hbWU7DQogICAgICAgIH0NCiAgICAgICAgZWxzZSBpZiAocGF0aCkgew0KICAgICAgICAgICAgcmVzdWx0ID0gcGF0aDsNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIGlmIChuYW1lKSB7DQogICAgICAgICAgICByZXN1bHQgPSBuYW1lOw0KICAgICAgICB9DQogICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgcmVzdWx0ID0gJyc7DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIHJlc3VsdDsNCiAgICB9DQogICAgaGFzU3ViU3lzdGVtKGhlYWx0aE9iamVjdCkgew0KICAgICAgICBsZXQgcmVzdWx0ID0gZmFsc2U7DQogICAgICAgIGZvciAoY29uc3Qga2V5IGluIGhlYWx0aE9iamVjdCkgew0KICAgICAgICAgICAgaWYgKGhlYWx0aE9iamVjdC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7DQogICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBoZWFsdGhPYmplY3Rba2V5XTsNCiAgICAgICAgICAgICAgICBpZiAodmFsdWUgJiYgdmFsdWUuc3RhdHVzKSB7DQogICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHRydWU7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgfQ0KICAgIGlzSGVhbHRoT2JqZWN0KGhlYWx0aE9iamVjdCkgew0KICAgICAgICBsZXQgcmVzdWx0ID0gZmFsc2U7DQogICAgICAgIGZvciAoY29uc3Qga2V5IGluIGhlYWx0aE9iamVjdCkgew0KICAgICAgICAgICAgaWYgKGhlYWx0aE9iamVjdC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7DQogICAgICAgICAgICAgICAgaWYgKGtleSA9PT0gJ3N0YXR1cycpIHsNCiAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIHJlc3VsdDsNCiAgICB9DQp9Ow0KSmhpSGVhbHRoU2VydmljZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbDQogICAgSW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KSwNCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgSHR0cENsaWVudCAhPT0gInVuZGVmaW5lZCIgJiYgSHR0cENsaWVudCkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdF0pDQpdLCBKaGlIZWFsdGhTZXJ2aWNlKTsNCmV4cG9ydCB7IEpoaUhlYWx0aFNlcnZpY2UgfTsNCg=="},{"version":3,"file":"C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\src\\main\\webapp\\app\\admin\\health\\health.service.ts","sourceRoot":"","sources":["C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\node_modules\\tslint-loader\\index.js!C:\\Users\\affe5\\OneDrive\\Desktop\\Schule\\Diplarbeit\\TIcketing\\src\\main\\webapp\\app\\admin\\health\\health.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class JhiHealthService {\r\n  separator: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.separator = '.';\r\n  }\r\n\r\n  checkHealth(): Observable<any> {\r\n    return this.http.get(SERVER_API_URL + 'management/health');\r\n  }\r\n\r\n  transformHealthData(data): any {\r\n    const response = [];\r\n    this.flattenHealthData(response, null, data.details);\r\n    return response;\r\n  }\r\n\r\n  getBaseName(name): string {\r\n    if (name) {\r\n      const split = name.split('.');\r\n      return split[0];\r\n    }\r\n  }\r\n\r\n  getSubSystemName(name): string {\r\n    if (name) {\r\n      const split = name.split('.');\r\n      split.splice(0, 1);\r\n      const remainder = split.join('.');\r\n      return remainder ? ' - ' + remainder : '';\r\n    }\r\n  }\r\n\r\n  /* private methods */\r\n  private addHealthObject(result, isLeaf, healthObject, name): any {\r\n    const healthData: any = {\r\n      name\r\n    };\r\n\r\n    const details = {};\r\n    let hasDetails = false;\r\n\r\n    for (const key in healthObject) {\r\n      if (healthObject.hasOwnProperty(key)) {\r\n        const value = healthObject[key];\r\n        if (key === 'status' || key === 'error') {\r\n          healthData[key] = value;\r\n        } else {\r\n          if (!this.isHealthObject(value)) {\r\n            details[key] = value;\r\n            hasDetails = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Add the details\r\n    if (hasDetails) {\r\n      healthData.details = details;\r\n    }\r\n\r\n    // Only add nodes if they provide additional information\r\n    if (isLeaf || hasDetails || healthData.error) {\r\n      result.push(healthData);\r\n    }\r\n    return healthData;\r\n  }\r\n\r\n  private flattenHealthData(result, path, data): any {\r\n    for (const key in data) {\r\n      if (data.hasOwnProperty(key)) {\r\n        const value = data[key];\r\n        if (this.isHealthObject(value)) {\r\n          if (this.hasSubSystem(value)) {\r\n            this.addHealthObject(result, false, value, this.getModuleName(path, key));\r\n            this.flattenHealthData(result, this.getModuleName(path, key), value);\r\n          } else {\r\n            this.addHealthObject(result, true, value, this.getModuleName(path, key));\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private getModuleName(path, name): string {\r\n    let result;\r\n    if (path && name) {\r\n      result = path + this.separator + name;\r\n    } else if (path) {\r\n      result = path;\r\n    } else if (name) {\r\n      result = name;\r\n    } else {\r\n      result = '';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private hasSubSystem(healthObject): boolean {\r\n    let result = false;\r\n\r\n    for (const key in healthObject) {\r\n      if (healthObject.hasOwnProperty(key)) {\r\n        const value = healthObject[key];\r\n        if (value && value.status) {\r\n          result = true;\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private isHealthObject(healthObject): boolean {\r\n    let result = false;\r\n\r\n    for (const key in healthObject) {\r\n      if (healthObject.hasOwnProperty(key)) {\r\n        if (key === 'status') {\r\n          result = true;\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n"]}]}